{
  "id": "ui/popover",
  "name": "Popover",
  "dependencies": [
    "@base_ui/react"
  ],
  "files": [
    {
      "path": "ui/popover.tsx",
      "content": "import * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Popover\";\nimport { styled } from \"@pigment-css/react\";\n\nconst Popover = Primitives.Root;\n\nconst PopoverTrigger = Primitives.Trigger;\n\nconst PopoverPositioner = Primitives.Positioner;\n\nconst PopoverContent = styled(Primitives.Popup, {\n  name: \"PopoverContent\",\n  slot: \"content\",\n})<React.ComponentProps<typeof Primitives.Popup>>({\n  backgroundColor: \"hsl(var(--color-surface))\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  color: \"hsl(var(--color-foreground))\",\n  filter: \"drop-shadow(0px 2px 4px hsl(0 0% 0% / 6%))\",\n  maxWidth: \"var(--size-md)\",\n  padding: \"calc(var(--size-unit) * 4)\",\n  position: \"relative\",\n  width: \"var(--size-full)\",\n  zIndex: \"var(--zIndex-popover)\",\n  \"&:focus-visible\": {\n    outline: \"none\",\n  },\n});\n\nconst PopoverArrow = styled(Primitives.Arrow, {\n  name: \"PopoverArrow\",\n  slot: \"arrow\",\n})<React.ComponentProps<typeof Primitives.Arrow>>({\n  backgroundColor: \"hsl(var(--color-surface))\",\n  height: \"10px\",\n  transform: \"rotate(45deg)\",\n  width: \"10px\",\n  zIndex: \"var(--zIndex-hide)\",\n  \"&[data-side='top']\": {\n    bottom: \"-5px\",\n  },\n  \"&[data-side='right']\": {\n    left: \"-5px\",\n  },\n  \"&[data-side='bottom']\": {\n    top: \"-5px\",\n  },\n  \"&[data-side='left']\": {\n    right: \"-5px\",\n  },\n});\n\nexport { Popover, PopoverTrigger, PopoverPositioner, PopoverContent, PopoverArrow };\n"
    }
  ]
}