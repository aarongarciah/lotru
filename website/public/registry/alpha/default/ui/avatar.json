{
  "id": "ui/avatar",
  "name": "Avatar",
  "dependencies": [
    "@radix-ui/react-avatar"
  ],
  "files": [
    {
      "path": "ui/avatar.tsx",
      "content": "import * as React from \"react\";\nimport { styled } from \"@pigment-css/react\";\nimport * as Primitive from \"@radix-ui/react-avatar\";\n\nconst AvatarRoot = styled(Primitive.Root, {\n  name: \"AvatarRoot\",\n  slot: \"root\",\n})<\n  React.ComponentProps<typeof Primitive.Root> & {\n    size: \"2xs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\";\n    variant: \"rounded\" | \"squared\";\n  }\n>({\n  alignItems: \"center\",\n  backgroundColor: \"hsl(var(--color-muted))\",\n  display: \"flex\",\n  flex: \"0 0 auto\",\n  height: \"var(--avatar-size)\",\n  justifyContent: \"center\",\n  overflow: \"hidden\",\n  width: \"var(--avatar-size)\",\n  variants: [\n    {\n      props: { size: \"2xs\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 5)\",\n      },\n    },\n    {\n      props: { size: \"xs\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 6)\",\n      },\n    },\n    {\n      props: { size: \"sm\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 8)\",\n      },\n    },\n    {\n      props: { size: \"md\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 10)\",\n      },\n    },\n    {\n      props: { size: \"lg\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 12)\",\n      },\n    },\n    {\n      props: { size: \"xl\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 16)\",\n      },\n    },\n    {\n      props: { size: \"2xl\" },\n      style: {\n        \"--avatar-size\": \"calc(var(--size-unit) * 20)\",\n      },\n    },\n    {\n      props: { variant: \"rounded\" },\n      style: {\n        borderRadius: \"var(--borderRadius-full)\",\n      },\n    },\n    {\n      props: { variant: \"squared\" },\n      style: {\n        borderRadius: \"var(--borderRadius-md)\",\n      },\n    },\n  ],\n} as React.CSSProperties);\n\nconst Avatar = ({\n  children,\n  size = \"md\",\n  variant = \"rounded\",\n  ...props\n}: React.ComponentProps<typeof Primitive.Root> & {\n  size?: \"2xs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\";\n  variant?: \"rounded\" | \"squared\";\n}) => (\n  <AvatarRoot size={size} variant={variant} {...props}>\n    {children}\n  </AvatarRoot>\n);\nAvatar.displayName = \"Avatar\";\n\nconst AvatarImage = styled(Primitive.Image, {\n  name: \"AvatarImage\",\n  slot: \"image\",\n})<React.ComponentProps<typeof Primitive.Image>>({\n  height: \"var(--size-full)\",\n  objectFit: \"cover\",\n  width: \"var(--size-full)\",\n});\n\nconst AvatarFallback = styled(Primitive.Fallback, {\n  name: \"AvatarFallback\",\n  slot: \"fallback\",\n})<React.ComponentProps<typeof Primitive.Fallback>>({\n  alignItems: \"center\",\n  backgroundColor: \"hsl(var(--color-muted))\",\n  color: \"hsl(var(--color-mutedForeground))\",\n  display: \"flex\",\n  fontSize: \"calc(var(--avatar-size) / 2.5)\",\n  height: \"var(--size-full)\",\n  justifyContent: \"center\",\n  width: \"var(--size-full)\",\n});\n\nexport { Avatar, AvatarFallback, AvatarImage };\n"
    }
  ]
}