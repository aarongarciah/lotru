{
  "id": "ui/checkbox",
  "name": "Checkbox",
  "dependencies": [
    "@base_ui/react"
  ],
  "files": [
    {
      "path": "ui/checkbox.tsx",
      "content": "import * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Checkbox\";\nimport { styled } from \"@pigment-css/react\";\nimport { CheckIcon, MinusIcon } from \"lucide-react\";\n\nconst CheckboxRoot = styled(Primitives.Root, {\n  name: \"CheckboxRoot\",\n  slot: \"root\",\n})({\n  alignItems: \"center\",\n  backgroundColor: \"hsl(var(--color-muted))\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"var(--borderRadius-sm)\",\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  flexShrink: 0,\n  height: \"calc(var(--size-unit) * 5)\",\n  justifyContent: \"center\",\n  padding: 0,\n  transitionDuration: \"var(--duration-fast)\",\n  transitionProperty: \"background-color\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"calc(var(--size-unit) * 5)\",\n  \"&:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-background))\",\n  },\n  \"&:focus-visible\": {\n    \"--ring-offset-width\": \"2px\",\n    \"--ring-offset-color\": \"hsl(var(--color-background))\",\n    \"--ring-offset-shadow\": \"0 0 0 var(--ring-offset-width) var(--ring-offset-color)\",\n    \"--ring-width\": \"2px\",\n    \"--ring-color\": \"hsl(var(--color-ring))\",\n    \"--ring-shadow\": \"0 0 0 calc(var(--ring-offset-width) + var(--ring-width)) var(--ring-color)\",\n    boxShadow: \"var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)\",\n    outline: \"none\",\n  },\n  \"&[data-disabled]\": {\n    cursor: \"not-allowed\",\n    opacity: 0.5,\n  },\n  \"&[data-state='checked']\": {\n    backgroundColor: \"hsl(var(--color-primary))\",\n    border: \"none\",\n  },\n  \"&[data-state='checked']:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-primary) / 80%)\",\n  },\n  \"&[data-state='checked'][data-disabled]\": {\n    backgroundColor: \"hsl(var(--color-muted))\",\n    border: \"1px solid hsl(var(--color-border))\",\n  },\n} as React.CSSProperties);\n\nconst CheckboxIndicator = styled(Primitives.Indicator, {\n  name: \"CheckboxIndicator\",\n  slot: \"indicator\",\n})({\n  alignItems: \"center\",\n  display: \"none\",\n  justifyContent: \"center\",\n  '&[data-state=\"checked\"]': {\n    display: \"inline-flex\",\n  },\n  '&[data-state=\"checked\"]:not([data-disabled])': {\n    color: \"hsl(var(--color-primaryForeground))\",\n  },\n  '&[data-state=\"checked\"][data-disabled]': {\n    color: \"hsl(var(--color-mutedForeground))\",\n  },\n  \"& svg\": {\n    flexShrink: 0,\n    fontSize: \"1.1em\",\n    height: \"1.1em\",\n    width: \"1.1em\",\n  },\n});\n\ninterface CheckboxProps extends React.ComponentPropsWithoutRef<typeof CheckboxRoot> {\n  intermediate?: boolean;\n}\n\nconst Checkbox = React.forwardRef<React.ElementRef<typeof CheckboxRoot>, CheckboxProps>(\n  (\n    {\n      /**\n       * Whether the checkbox is in an indeterminate state\n       */\n      indeterminate = false,\n      ...props\n    }: CheckboxProps,\n    ref\n  ) => (\n    <CheckboxRoot ref={ref} {...props}>\n      <CheckboxIndicator>{indeterminate ? <MinusIcon /> : <CheckIcon />}</CheckboxIndicator>\n    </CheckboxRoot>\n  )\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n"
    }
  ]
}