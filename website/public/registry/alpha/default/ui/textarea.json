{
  "id": "ui/textarea",
  "name": "Textarea",
  "files": [
    {
      "path": "ui/textarea.tsx",
      "content": "import * as React from \"react\";\nimport { styled } from \"@pigment-css/react\";\n\nconst TextareaRoot = styled(\"textarea\", {\n  name: \"TextareaRoot\",\n  slot: \"root\",\n})({\n  appearance: \"none\",\n  backgroundColor: \"var(--color-background)\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  color: \"hsl(var(--color-foreground))\",\n  fontFamily: \"var(--fontFamily-sans)\",\n  fontSize: \"var(--fontSize-md)\",\n  height: \"calc(var(--size-unit) * 10)\",\n  maxWidth: \"var(--size-xs)\",\n  minWidth: \"calc(var(--size-unit) * 10)\",\n  paddingBlock: \"calc(var(--spacing-unit) * 2)\",\n  paddingInline: \"calc(var(--spacing-unit) * 3)\",\n  position: \"relative\",\n  width: \"var(--size-full)\",\n  \"&:focus-visible\": {\n    \"--ring-offset-width\": \"0px\",\n    \"--ring-offset-color\": \"hsl(var(--color-background))\",\n    \"--ring-offset-shadow\": \"0 0 0 var(--ring-offset-width) var(--ring-offset-color)\",\n    \"--ring-width\": \"3px\",\n    \"--ring-color\": \"hsl(var(--color-ring) / 20%)\",\n    \"--ring-shadow\": \"0 0 0 calc(var(--ring-offset-width) + var(--ring-width)) var(--ring-color)\",\n    borderColor: \"hsl(var(--color-ring))\",\n    boxShadow: \"var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)\",\n    outline: \"none\",\n  },\n  \"&:disabled\": {\n    cursor: \"not-allowed\",\n    opacity: 0.5,\n  },\n  '&[data-field=\"invalid\"]': {\n    borderColor: \"hsl(var(--color-danger))\",\n  },\n  '&[data-field=\"invalid\"]:focus-visible': {\n    \"--ring-color\": \"hsl(var(--color-danger) / 20%)\",\n  },\n  \"&::placeholder\": {\n    color: \"hsl(var(--color-mutedForeground))\",\n  },\n  \"&::placeholder:disabled\": {\n    color: \"hsl(var(--color-mutedForeground))\",\n  },\n} as React.CSSProperties);\n\ninterface TextareaProps extends React.ComponentPropsWithoutRef<\"textarea\"> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>((props, ref) => {\n  return <TextareaRoot ref={ref} {...props} />;\n});\n\nexport { Textarea };\n\nexport type { TextareaProps };\n"
    }
  ]
}