{
  "id": "ui/alert",
  "name": "Alert",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "ui/icon-button"
  ],
  "files": [
    {
      "path": "ui/alert.tsx",
      "content": "import * as React from \"react\";\nimport { css, styled } from \"@pigment-css/react\";\nimport { XIcon } from \"lucide-react\";\n\nimport { IconButton } from \"@/components/ui/icon-button\";\n\nconst AlertRoot = styled(\"div\", {\n  name: \"AlertRoot\",\n  slot: \"root\",\n})<React.ComponentProps<\"div\">>({\n  alignItems: \"flex-start\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"var(--borderRadius-lg)\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  gap: \"calc(var(--spacing-unit) * 3)\",\n  padding: \"calc(var(--spacing-unit) * 4)\",\n  width: \"var(--size-full)\",\n});\n\nconst AlertIcon = styled(\"div\", {\n  name: \"AlertIcon\",\n  slot: \"icon\",\n})<React.ComponentProps<\"div\">>({\n  alignItems: \"center\",\n  display: \"flex\",\n  fontSize: \"var(--fontSize-lg)\",\n  justifyContent: \"center\",\n  \"& svg\": {\n    color: \"hsl(var(--color-foreground))\",\n    flexShrink: 0,\n    fontSize: \"1.1em\",\n    height: \"1.1em\",\n    width: \"1.1em\",\n  },\n});\n\nconst AlertContent = styled(\"div\", {\n  name: \"AlertContent\",\n  slot: \"content\",\n})<React.ComponentProps<\"div\">>({\n  flexGrow: 1,\n});\n\nconst AlertTitle = styled(\"p\", {\n  name: \"AlertTitle\",\n  slot: \"title\",\n})<React.ComponentProps<\"p\">>({\n  color: \"hsl(var(--color-foreground))\",\n  fontFamily: \"var(--fontFamily-sans)\",\n  fontSize: \"var(--fontSize-md)\",\n  lineHeight: \"var(--lineHeight-normal)\",\n  fontWeight: \"var(--fontWeight-medium)\",\n  marginBlock: 0,\n});\n\nconst AlertDescription = styled(\"p\", {\n  name: \"AlertTitle\",\n  slot: \"title\",\n})<React.ComponentProps<\"p\">>({\n  color: \"hsl(var(--color-mutedForeground))\",\n  fontFamily: \"var(--fontFamily-sans)\",\n  fontSize: \"var(--fontSize-sm)\",\n  lineHeight: \"var(--lineHeight-normal)\",\n  marginBlock: 0,\n});\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentPropsWithoutRef<\"div\"> & {\n    dismissible?: boolean;\n    onDismiss?: () => void;\n    variant?: \"error\" | \"success\" | \"warning\" | \"info\";\n  }\n>(\n  (\n    {\n      children,\n      /**\n       * Whether the alert is dismissible\n       */\n      dismissible = false,\n      /**\n       * The callback called on dismiss click\n       */\n      onDismiss,\n      /**\n       * The variant of the alert\n       */\n      variant = \"info\",\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <AlertRoot ref={ref} {...props}>\n        {children}\n        {dismissible && (\n          <IconButton size=\"xs\" variant=\"ghost\" onClick={onDismiss}>\n            <XIcon\n              className={css({\n                color: \"hsl(var(--color-mutedForeground))\",\n              })}\n            />\n          </IconButton>\n        )}\n      </AlertRoot>\n    );\n  }\n);\nAlert.displayName = \"Alert\";\n\nexport { Alert, AlertIcon, AlertContent, AlertTitle, AlertDescription };\n"
    }
  ]
}