{
  "id": "ui/field",
  "name": "Field",
  "dependencies": [
    "@base_ui/react"
  ],
  "files": [
    {
      "path": "ui/field.tsx",
      "content": "import * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Field\";\nimport { styled } from \"@pigment-css/react\";\n\nconst Field = styled(Primitives.Root, {\n  name: \"Field\",\n  slot: \"root\",\n})<React.ComponentProps<typeof Primitives.Root>>({\n  display: \"grid\",\n  gap: \"calc(var(--spacing-unit) * 2)\",\n});\n\nconst FieldControl = ({\n  children,\n  ...props\n}: Omit<Primitives.ControlProps, \"render\"> & {\n  children: Primitives.ControlProps[\"render\"];\n}): React.JSX.Element => <Primitives.Control render={children} {...props} />;\nFieldControl.displayName = \"FieldControl\";\n\nconst FieldLabel = styled(Primitives.Label, {\n  name: \"FieldLabel\",\n  slot: \"label\",\n})<React.ComponentProps<typeof Primitives.Label>>({\n  display: \"block\",\n  fontSize: \"var(--fontSize-sm)\",\n  fontWeight: \"var(--fontWeight-medium)\",\n  lineHeight: \"var(--lineHeight-none)\",\n});\n\nconst FieldDescription = styled(Primitives.Description, {\n  name: \"FieldDescription\",\n  slot: \"description\",\n})<React.ComponentProps<typeof Primitives.Description>>({\n  color: \"hsl(var(--color-mutedForeground))\",\n  display: \"block\",\n  fontSize: \"var(--fontSize-sm)\",\n  marginBlock: 0,\n});\n\nconst FieldError = styled(Primitives.Error, {\n  name: \"FieldError\",\n  slot: \"error\",\n})<React.ComponentProps<typeof Primitives.Error>>({\n  color: \"hsl(var(--color-danger))\",\n  display: \"block\",\n  fontSize: \"var(--fontSize-sm)\",\n  marginBlock: 0,\n});\n\nconst FieldValidity = Primitives.Validity;\n\nexport { Field, FieldControl, FieldDescription, FieldError, FieldValidity, FieldLabel };\n"
    }
  ]
}