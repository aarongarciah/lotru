{
  "id": "ui/text",
  "name": "Text",
  "files": [
    {
      "path": "ui/text.tsx",
      "content": "import * as React from \"react\";\nimport { styled } from \"@pigment-css/react\";\n\ninterface TextRootProps extends React.ComponentPropsWithoutRef<\"p\"> {\n  family: \"sans\" | \"mono\";\n  leading: \"normal\" | \"tight\" | \"none\";\n  size: \"2xs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\" | \"6xl\" | \"7xl\" | \"8xl\" | \"9xl\";\n  weight: \"regular\" | \"medium\" | \"semibold\" | \"bold\";\n}\n\nconst TextRoot = styled(\"p\", {\n  name: \"TextRoot\",\n  slot: \"root\",\n})<TextRootProps>({\n  boxSizing: \"border-box\",\n  margin: 0,\n  variants: [\n    {\n      props: { size: \"xs\" },\n      style: {\n        fontSize: \"var(--fontSize-xs)\",\n      },\n    },\n    {\n      props: { size: \"sm\" },\n      style: {\n        fontSize: \"var(--fontSize-sm)\",\n      },\n    },\n    {\n      props: { size: \"md\" },\n      style: {\n        fontSize: \"var(--fontSize-md)\",\n      },\n    },\n    {\n      props: { size: \"lg\" },\n      style: {\n        fontSize: \"var(--fontSize-lg)\",\n      },\n    },\n    {\n      props: { size: \"xl\" },\n      style: {\n        fontSize: \"var(--fontSize-xl)\",\n      },\n    },\n    {\n      props: { size: \"2xl\" },\n      style: {\n        fontSize: \"var(--fontSize-2xl)\",\n      },\n    },\n    {\n      props: { size: \"3xl\" },\n      style: {\n        fontSize: \"var(--fontSize-3xl)\",\n      },\n    },\n    {\n      props: { size: \"4xl\" },\n      style: {\n        fontSize: \"var(--fontSize-4xl)\",\n      },\n    },\n    {\n      props: { size: \"5xl\" },\n      style: {\n        fontSize: \"var(--fontSize-5xl)\",\n      },\n    },\n    {\n      props: { size: \"6xl\" },\n      style: {\n        fontSize: \"var(--fontSize-6xl)\",\n      },\n    },\n    {\n      props: { size: \"7xl\" },\n      style: {\n        fontSize: \"var(--fontSize-7xl)\",\n      },\n    },\n    {\n      props: { size: \"8xl\" },\n      style: {\n        fontSize: \"var(--fontSize-8xl)\",\n      },\n    },\n    {\n      props: { size: \"9xl\" },\n      style: {\n        fontSize: \"var(--fontSize-9xl)\",\n      },\n    },\n    {\n      props: { weight: \"regular\" },\n      style: {\n        fontWeight: \"var(--fontWeight-regular)\",\n      },\n    },\n    {\n      props: { weight: \"medium\" },\n      style: {\n        fontWeight: \"var(--fontWeight-medium)\",\n      },\n    },\n    {\n      props: { weight: \"semibold\" },\n      style: {\n        fontWeight: \"var(--fontWeight-semibold)\",\n      },\n    },\n    {\n      props: { weight: \"bold\" },\n      style: {\n        fontWeight: \"var(--fontWeight-bold)\",\n      },\n    },\n    {\n      props: { family: \"sans\" },\n      style: {\n        fontFamily: \"var(--fontFamily-sans)\",\n      },\n    },\n    {\n      props: { family: \"mono\" },\n      style: {\n        fontFamily: \"var(--fontFamily-mono)\",\n      },\n    },\n    {\n      props: { leading: \"normal\" },\n      style: {\n        lineHeight: \"var(--lineHeight-normal)\",\n      },\n    },\n    {\n      props: { leading: \"tight\" },\n      style: {\n        lineHeight: \"var(--lineHeight-tight)\",\n      },\n    },\n    {\n      props: { leading: \"none\" },\n      style: {\n        lineHeight: \"var(--lineHeight-none)\",\n      },\n    },\n  ],\n});\n\ninterface TextProps extends React.ComponentPropsWithoutRef<\"p\"> {\n  as?: \"p\" | \"span\" | \"div\";\n  family?: \"sans\" | \"mono\";\n  leading?: \"normal\" | \"tight\" | \"none\";\n  size?: \"2xs\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\" | \"6xl\" | \"7xl\" | \"8xl\" | \"9xl\";\n  weight?: \"regular\" | \"medium\" | \"semibold\" | \"bold\";\n}\n\nconst Text = React.forwardRef<HTMLParagraphElement, TextProps>(\n  (\n    {\n      /**\n       * The wrapper element to use.\n       */\n      as = \"p\",\n      children,\n      /**\n       * The text's font family.\n       */\n      family = \"sans\",\n      /**\n       * The text's line height.\n       */\n      leading = \"normal\",\n      /**\n       * The text's size.\n       */\n      size = \"md\",\n      /**\n       * The text's font weight.\n       */\n      weight = \"regular\",\n      ...props\n    }: TextProps,\n    ref\n  ) => {\n    return (\n      <TextRoot as={as} ref={ref} size={size} weight={weight} family={family} leading={leading} {...props}>\n        {children}\n      </TextRoot>\n    );\n  }\n);\nText.displayName = \"Text\";\n\nexport { Text };\n\nexport type { TextProps };\n"
    }
  ]
}