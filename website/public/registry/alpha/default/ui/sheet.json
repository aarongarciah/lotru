{
  "id": "ui/sheet",
  "name": "Sheet",
  "dependencies": [
    "@base_ui/react",
    "lucide-react"
  ],
  "registryDependencies": [
    "ui/icon-button"
  ],
  "files": [
    {
      "path": "ui/sheet.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Dialog\";\nimport { styled } from \"@pigment-css/react\";\nimport { XIcon } from \"lucide-react\";\n\nconst Sheet = (props: React.ComponentProps<typeof Primitives.Root>): React.JSX.Element => (\n  <Primitives.Root {...props} />\n);\nSheet.displayName = \"Sheet\";\n\nconst SheetTrigger = React.forwardRef<\n  React.ElementRef<typeof Primitives.Trigger>,\n  React.ComponentPropsWithoutRef<typeof Primitives.Trigger>\n>((props, ref) => <Primitives.Trigger ref={ref} {...props} />);\nSheetTrigger.displayName = \"SheetTrigger\";\n\nconst SheetClose = React.forwardRef<\n  React.ElementRef<typeof Primitives.Close>,\n  React.ComponentPropsWithoutRef<typeof Primitives.Close>\n>((props, ref) => <Primitives.Close ref={ref} {...props} />);\nSheetClose.displayName = \"SheetClose\";\n\nconst SheetOverlay = styled(Primitives.Backdrop, {\n  name: \"SheetOverlay\",\n  slot: \"overlay\",\n})<React.ComponentProps<typeof Primitives.Backdrop>>({\n  backgroundColor: \"hsl(var(--color-overlay))\",\n  inset: 0,\n  position: \"fixed\",\n  zIndex: \"var(--zIndex-overlay)\",\n});\n\nconst SheetContent = styled(Primitives.Popup, {\n  name: \"SheetContent\",\n  slot: \"content\",\n})<\n  React.ComponentProps<typeof Primitives.Popup> & {\n    side: \"left\" | \"right\";\n  }\n>({\n  backgroundColor: \"hsl(var(--color-surface))\",\n  bottom: 0,\n  boxShadow: \"var(--shadow-xl)\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flex: \"1 1 auto\",\n  flexDirection: \"column\",\n  maxWidth: \"70%\",\n  opacity: 0,\n  padding: \"calc(var(--spacing-unit) * 6)\",\n  position: \"fixed\",\n  top: 0,\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"transform, opacity\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"var(--size-full)\",\n  zIndex: \"var(--zIndex-modal)\",\n  \"&:focus-visible\": {\n    outline: \"none\",\n  },\n  \"&[data-state='open']\": {\n    opacity: 1,\n    transform: \"translateX(0)\",\n  },\n  \"&[data-entering]\": {\n    opacity: 0,\n  },\n  \"@media (min-width: 768px)\": {\n    maxWidth: \"var(--size-sm)\",\n  },\n  variants: [\n    {\n      props: { side: \"left\" },\n      style: {\n        left: 0,\n        transform: \"translateX(-100%)\",\n        \"&[data-entering]\": {\n          transform: \"translateX(-100%)\",\n        },\n      },\n    },\n    {\n      props: { side: \"right\" },\n      style: {\n        right: 0,\n        transform: \"translateX(100%)\",\n        \"&[data-entering]\": {\n          transform: \"translateX(100%)\",\n        },\n      },\n    },\n  ],\n});\n\nconst SheetHeaderRoot = styled(\"div\", {\n  name: \"SheetHeader\",\n  slot: \"header\",\n})<React.ComponentProps<\"div\">>({\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"calc(var(--spacing-unit) * 2)\",\n});\n\nconst SheedHeaderClose = styled(\"button\", {\n  name: \"SheetHeaderClose\",\n  slot: \"close\",\n})<React.ComponentProps<\"button\">>({\n  appearance: \"none\",\n  background: \"none\",\n  border: \"none\",\n  borderRadius: \"var(--borderRadius-md)\",\n  boxSizing: \"border-box\",\n  color: \"hsl(var(--color-foreground))\",\n  cursor: \"pointer\",\n  opacity: 0.7,\n  padding: 0,\n  position: \"absolute\",\n  right: \"calc(var(--spacing-unit) * 4)\",\n  top: \"calc(var(--spacing-unit) * 4)\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"background-color\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  \"&:hover:not(:disabled)\": {\n    opacity: 1,\n  },\n  \"& svg\": {\n    height: \"calc(var(--size-unit) * 4)\",\n    width: \"calc(var(--size-unit) * 4)\",\n  },\n});\n\nconst SheetHeader = React.forwardRef<\n  React.ElementRef<typeof SheetHeaderRoot>,\n  React.ComponentPropsWithoutRef<typeof SheetHeaderRoot>\n>(({ children, ...props }, ref) => (\n  <SheetHeaderRoot ref={ref} {...props}>\n    {children}\n    <Primitives.Close\n      render={\n        <SheedHeaderClose>\n          <XIcon />\n        </SheedHeaderClose>\n      }\n    />\n  </SheetHeaderRoot>\n));\nSheetHeader.displayName = \"SheetHeader\";\n\nconst SheetTitle = styled(Primitives.Title, {\n  name: \"SheetTitle\",\n  slot: \"title\",\n})<React.ComponentProps<typeof Primitives.Title>>({\n  color: \"hsl(var(--color-foreground))\",\n  fontFamily: \"var(--fontFamily-sans)\",\n  fontSize: \"var(--fontSize-lg)\",\n  lineHeight: \"var(--lineHeight-normal)\",\n  fontWeight: \"var(--fontWeight-semibold)\",\n  marginBlock: 0,\n});\n\nconst SheetDescription = styled(Primitives.Description, {\n  name: \"SheetDescription\",\n  slot: \"description\",\n})<React.ComponentProps<typeof Primitives.Description>>({\n  color: \"hsl(var(--color-mutedForeground))\",\n  fontFamily: \"var(--fontFamily-sans)\",\n  fontSize: \"var(--fontSize-sm)\",\n  lineHeight: \"var(--lineHeight-compact)\",\n  marginBlock: 0,\n});\n\nconst SheetFooter = styled(\"div\", {\n  name: \"SheetFooter\",\n  slot: \"footer\",\n})<React.ComponentProps<\"div\">>({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n});\n\nexport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetOverlay,\n  SheetTitle,\n  SheetTrigger,\n};\n"
    }
  ]
}