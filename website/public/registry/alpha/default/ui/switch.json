{
  "id": "ui/switch",
  "name": "Switch",
  "dependencies": [
    "@base_ui/react"
  ],
  "files": [
    {
      "path": "ui/switch.tsx",
      "content": "import * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Switch\";\nimport { styled } from \"@pigment-css/react\";\n\nconst SwitchRoot = styled(Primitives.Root, {\n  name: \"Switch\",\n  slot: \"root\",\n})(({ theme }) => ({\n  borderColor: \"hsl(var(--color-border))\",\n  borderStyle: \"solid\",\n  borderWidth: \"1px\",\n  borderRadius: \"24px\",\n  boxShadow: \"inset 0px 1px 1px rgba(0, 0, 0, .05)\",\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"inline-block\",\n  height: \"18px\",\n  padding: 0,\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"all\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"32px\",\n  overflow: \"hidden\",\n  position: \"relative\",\n  \"&[data-disabled]\": {\n    cursor: \"not-allowed\",\n    opacity: 0.4,\n  },\n  \"&:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-backgroundSubtleHover))\",\n    borderColor: \"hsl(var(--color-borderStrong))\",\n  },\n  \"&:focus-visible\": {\n    boxShadow: \"0 0 0 3px hsl(var(--color-borderInteractive))\",\n  },\n  \"&[data-state='checked']\": {\n    backgroundColor: \"hsl(var(--color-backgroundInteractive))\",\n    border: \"none\",\n  },\n  \"&[data-state='checked']:not([data-disabled]):hover\": {\n    backgroundColor: \"hsl(var(--color-backgroundInteractiveHover))\",\n  },\n  \"&[data-state='unchecked']:not([data-disabled])\": {\n    backgroundColor: \"hsl(220 13% 91%)\",\n    ...theme.applyStyles(\"dark\", {\n      backgroundColor: \"hsl(220 13% 30%)\",\n    }),\n  },\n  \"&[data-state='unchecked']:not([data-disabled]):hover\": {\n    backgroundColor: \"hsl(216 12% 86%)\",\n    ...theme.applyStyles(\"dark\", {\n      backgroundColor: \"hsl(216 12% 35%)\",\n    }),\n  },\n  \"&:before\": {\n    content: '\"\"',\n    display: \"block\",\n    height: \"var(--size-full)\",\n    position: \"absolute\",\n    width: \"var(--size-full)\",\n    left: 0,\n    top: 0,\n    boxShadow:\n      \"rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(0, 0, 0, 0) 0px 0px 0px 0px, rgba(3, 7, 18, .04) 0px 1px 1px 0px inset, rgba(3, 7, 18, .04) 0px 2px 4px 0px inset, rgba(3, 7, 18, .06) 0px 0px 0px .5px inset, rgba(3, 7, 18, .02) 0px 0px 8px 0px inset, rgba(3, 7, 18, .04) 0px 2px 4px 0px\",\n  },\n}));\n\nconst SwitchThumb = styled(Primitives.Thumb, {\n  name: \"SwitchThumb\",\n  slot: \"thumb\",\n})({\n  backgroundColor: \"hsl(var(--color-foregroundOnColor))\",\n  borderColor: \"hsl(var(--color-border))\",\n  borderStyle: \"solid\",\n  borderWidth: \"1px\",\n  borderRadius: \"16px\",\n  boxShadow: \"0px 1px 2px rgba(0, 0, 0, .1)\",\n  boxSizing: \"border-box\",\n  display: \"block\",\n  height: \"14px\",\n  left: \"2px\",\n  position: \"relative\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"all\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"14px\",\n  \"&[data-state='checked']\": {\n    boxShadow: \"0px 1px 2px rgba(0, 0, 0, .3)\",\n    left: \"16px\",\n  },\n});\n\ninterface SwitchProps extends React.ComponentPropsWithoutRef<typeof SwitchRoot> {}\n\nconst Switch = React.forwardRef<React.ElementRef<typeof SwitchRoot>, SwitchProps>((props, ref) => (\n  <SwitchRoot ref={ref} {...props}>\n    <SwitchThumb />\n  </SwitchRoot>\n));\nSwitch.displayName = \"Switch\";\n\nexport { Switch };\n\nexport type { SwitchProps };\n"
    }
  ]
}