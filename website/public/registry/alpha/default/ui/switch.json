{
  "id": "ui/switch",
  "name": "Switch",
  "dependencies": [
    "@base_ui/react"
  ],
  "files": [
    {
      "path": "ui/switch.tsx",
      "content": "import * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Switch\";\nimport { styled } from \"@pigment-css/react\";\n\nconst SwitchRoot = styled(Primitives.Root, {\n  name: \"SwitchRoot\",\n  slot: \"root\",\n})<React.ComponentProps<typeof Primitives.Root>>({\n  backgroundColor: \"hsl(var(--color-muted))\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"calc(var(--size-unit) * 2.5)\",\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"inline-block\",\n  height: \"calc(var(--size-unit) * 5)\",\n  flexShrink: 0,\n  padding: 0,\n  position: \"relative\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"background-color\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"calc(var(--size-unit) * 9)\",\n  \"&:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-background))\",\n  },\n  \"&:focus-visible\": {\n    \"--ring-offset-width\": \"2px\",\n    \"--ring-offset-color\": \"hsl(var(--color-background))\",\n    \"--ring-offset-shadow\": \"0 0 0 var(--ring-offset-width) var(--ring-offset-color)\",\n    \"--ring-width\": \"2px\",\n    \"--ring-color\": \"hsl(var(--color-ring))\",\n    \"--ring-shadow\": \"0 0 0 calc(var(--ring-offset-width) + var(--ring-width)) var(--ring-color)\",\n    boxShadow: \"var(--ring-offset-shadow), var(--ring-shadow), var(--shadow, 0 0 #0000)\",\n    outline: \"none\",\n  },\n  \"&[data-disabled]\": {\n    cursor: \"not-allowed\",\n    opacity: 0.5,\n  },\n  \"&[data-state='checked']\": {\n    backgroundColor: \"hsl(var(--color-primary))\",\n    border: \"none\",\n  },\n  \"&[data-state='checked']:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-primary) / 80%)\",\n  },\n  \"&[data-state='checked'][data-disabled]\": {\n    backgroundColor: \"hsl(var(--color-muted))\",\n    border: \"1px solid hsl(var(--color-border))\",\n  },\n} as React.CSSProperties);\n\nconst SwitchThumb = styled(Primitives.Thumb, {\n  name: \"SwitchThumb\",\n  slot: \"thumb\",\n})<React.ComponentProps<typeof Primitives.Thumb>>({\n  backgroundColor: \"hsl(var(--color-background))\",\n  border: \"1px solid hsl(var(--color-border))\",\n  borderRadius: \"50%\",\n  boxShadow: \"var(--shadow-xs)\",\n  boxSizing: \"border-box\",\n  display: \"block\",\n  height: \"calc(var(--size-unit) * 4)\",\n  left: \"1px\",\n  position: \"relative\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"left\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"calc(var(--size-unit) * 4)\",\n  \"&[data-state='checked']\": {\n    left: \"calc(calc(var(--size-unit) * 5) - 2px)\",\n  },\n});\n\nconst Switch = React.forwardRef<React.ElementRef<typeof Primitives.Root>, React.ComponentProps<typeof Primitives.Root>>(\n  (props, ref) => (\n    <SwitchRoot ref={ref} {...props}>\n      <SwitchThumb />\n    </SwitchRoot>\n  )\n);\nSwitch.displayName = \"Switch\";\n\nexport { Switch };\n"
    }
  ]
}