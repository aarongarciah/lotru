{
  "id": "ui/switch",
  "name": "Switch",
  "dependencies": [
    "@base_ui/react"
  ],
  "files": [
    {
      "path": "ui/switch.tsx",
      "content": "import * as React from \"react\";\nimport * as Primitives from \"@base_ui/react/Switch\";\nimport { styled } from \"@pigment-css/react\";\n\nconst SwitchRoot = styled(Primitives.Root, {\n  name: \"Switch\",\n  slot: \"root\",\n})({\n  borderColor: \"hsl(var(--color-border))\",\n  borderRadius: \"calc(var(--size-unit) * 2.5)\",\n  borderStyle: \"solid\",\n  borderWidth: \"1px\",\n  boxSizing: \"border-box\",\n  cursor: \"pointer\",\n  display: \"inline-block\",\n  height: \"calc(var(--size-unit) * 5)\",\n  overflow: \"hidden\",\n  padding: 0,\n  position: \"relative\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"background-color, border-color\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"calc(var(--size-unit) * 9)\",\n  \"&[data-disabled]\": {\n    backgroundColor: \"hsl(var(--color-backgroundDisabled))\",\n    cursor: \"not-allowed\",\n  },\n  \"&:hover:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-backgroundSubtleHover))\",\n    borderColor: \"hsl(var(--color-borderStrong))\",\n  },\n  \"&:focus-visible\": {},\n  \"&[data-state='checked']:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-primary))\",\n    borderColor: \"transparent\",\n  },\n  \"&[data-state='checked']:not([data-disabled]):hover\": {\n    backgroundColor: \"hsl(var(--color-primary) / 80%)\",\n  },\n  \"&[data-state='unchecked']:not([data-disabled])\": {\n    backgroundColor: \"hsl(var(--color-backgroundSubtle))\",\n  },\n  \"&[data-state='unchecked']:not([data-disabled]):hover\": {\n    backgroundColor: \"hsl(var(--color-background))\",\n  },\n});\n\nconst SwitchThumb = styled(Primitives.Thumb, {\n  name: \"SwitchThumb\",\n  slot: \"thumb\",\n})({\n  backgroundColor: \"hsl(var(--color-background))\",\n  borderColor: \"hsl(var(--color-border))\",\n  borderStyle: \"solid\",\n  borderWidth: \"1px\",\n  borderRadius: \"50%\",\n  boxShadow: \"var(--shadow-xs)\",\n  boxSizing: \"border-box\",\n  display: \"block\",\n  height: \"calc(var(--size-unit) * 4)\",\n  left: \"1px\",\n  position: \"relative\",\n  transitionDuration: \"var(--duration-normal)\",\n  transitionProperty: \"left\",\n  transitionTimingFunction: \"var(--easing-default)\",\n  width: \"calc(var(--size-unit) * 4)\",\n  \"&[data-state='checked']\": {\n    left: \"calc(calc(var(--size-unit) * 5) - 2px)\",\n  },\n});\n\ninterface SwitchProps extends React.ComponentPropsWithoutRef<typeof SwitchRoot> {}\n\nconst Switch = React.forwardRef<React.ElementRef<typeof SwitchRoot>, SwitchProps>((props, ref) => (\n  <SwitchRoot ref={ref} {...props}>\n    <SwitchThumb />\n  </SwitchRoot>\n));\nSwitch.displayName = \"Switch\";\n\nexport { Switch };\n\nexport type { SwitchProps };\n"
    }
  ]
}